% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/add_group_model.R, R/gf_model.R
\name{add_group_model}
\alias{add_group_model}
\title{Add the group model (to a point plot)}
\usage{
add_group_model(object, gformula, data, width = 0.3, ...)

add_group_model(object, gformula, data, width = 0.3, ...)
}
\arguments{
\item{object}{A gg object to chain to, optionally.}

\item{gformula}{A formula of the shape \code{y ~ x}.}

\item{data}{The data the formula refers to.}

\item{width}{The width of the mean lines to be plotted.}

\item{...}{Additional arguments passed to \code{\link[=gf_segment]{gf_segment()}}}

\item{formula}{A formula with shape y ~ x.}
}
\value{
A gg object

A gg object.
}
\description{
When teaching about regression and group models (regression with a factor as an explanatory
variable), it can be useful to visualize the data as a point plot with the outcome on the y-axis
and the explanatory variable on the x-axis. It can take a little work to overlay the mean lines
for the model fit on this plot though --- using something like \code{gf_hline()} will put lines all
the way across the plot instead of just through their respective groups. This is where
\code{add_group_model()} comes in: pass it the same model and data as the \code{gf_point()} or
\code{gf_jitter()} plot and it will add the mean lines in the correct locations.

The group model is represented by mean lines for each group in the model. The values for these
lines are extracted using the formula with the passed data, and then plotted via
\code{\link[=gf_segment]{gf_segment()}}. If this plot is not being chained to a prior plot, a blank point plot is
created to make sure the axes are informative and have the range of the original data.
}
\examples{
gf_jitter(Thumb ~ Sex, data = Fingers) \%>\%
  add_group_model(Thumb ~ Sex, data = Fingers, size = 2)
}
\keyword{internal}

% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/add_group_model.R
\name{add_group_model}
\alias{add_group_model}
\title{Add the group model (to a point plot)}
\usage{
add_group_model(object, formula, data, width = 0.3, ...)
}
\arguments{
\item{object}{When chaining, this holds an object produced in the earlier portions of the chain.
Most users can safely ignore this argument. See details and examples.}

\item{formula}{A formula with shape y ~ x.}

\item{data}{A data frame with the variables to be plotted.}

\item{width}{The width of the mean line(s) to be plotted. Note that factors are plotted 1 unit
apart, so values larger than 1 will overlap into other groups.}

\item{...}{Additional arguments passed to \code{gf_segment()} like \code{alpha}, \code{size}, \code{color}, etc.}
}
\value{
A gg object
}
\description{
When teaching about regression and group models (regression with a factor as an explanatory
variable), it can be useful to visualize the data as a point plot with the outcome on the y-axis
and the explanatory variable on the x-axis. It can take a little work to overlay the mean lines
for the model fit on this plot though --- using something like \code{gf_hline()} will put lines all
the way across the plot instead of just through their respective groups. This is where
\code{add_group_model()} comes in: pass it the same model and data as the \code{gf_point()} or
\code{gf_jitter()} plot and it will add the mean lines in the correct locations.
}
\examples{
gf_jitter(Thumb ~ Sex, data = Fingers) \%>\%
  add_group_model(Thumb ~ Sex, data = Fingers, size = 2)
}
